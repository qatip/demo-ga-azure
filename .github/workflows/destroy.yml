name: terraform-destroy

on:
  workflow_dispatch:
    inputs:
      confirm:
        description: 'Type: DESTROY to confirm you want to delete all resources in state'
        required: true
        default: 'NO'
permissions:
  id-token: write
  contents: read

jobs:
  destroy:
    if: github.event.inputs.confirm == 'DESTROY'
    runs-on: ubuntu-latest
    env:
      TF_IN_AUTOMATION: true
      ARM_USE_OIDC: true
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      TF_VERSION: 1.8.5
      STATE_RG: ${{ vars.STATE_RG }}
      STATE_STORAGE: ${{ vars.STATE_STORAGE }}
      STATE_CONTAINER: ${{ vars.STATE_CONTAINER }}
      STATE_KEY: prod.tfstate
    steps:
      - uses: actions/checkout@v4

      - name: Azure login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform init (remote state)
        run: |
          terraform init \
            -backend-config="resource_group_name=${STATE_RG}" \
            -backend-config="storage_account_name=${STATE_STORAGE}" \
            -backend-config="container_name=${STATE_CONTAINER}" \
            -backend-config="key=${STATE_KEY}"

      - name: Terraform destroy
        run: |
          terraform destroy -auto-approve \
            -var="subscription_id=${ARM_SUBSCRIPTION_ID}" \
            -var="env=prod"
